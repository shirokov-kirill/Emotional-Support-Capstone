server {
    listen 443;

    # Serve the React application
    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;

	    server_name ${DOMAIN_NAME};

    	    ssl_certificate /etc/nginx/ssl/${DOMAIN_NAME}.crt; # Path to your SSL certificate
	    ssl_certificate_key /etc/nginx/ssl/${DOMAIN_NAME}.key; # Path to your SSL key
    }

    # Proxy API requests to the Backend
    location /api/ {
        proxy_pass http://app-backend:8080/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        if ($request_method = 'OPTIONS') {
            # Tell client that preflight request is accepted
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}
